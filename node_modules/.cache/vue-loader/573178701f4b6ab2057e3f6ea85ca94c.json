{"remainingRequest":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/GoProjects/go_gateway_view/src/views/service/tcp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/john/GoProjects/go_gateway_view/src/views/service/tcp.vue","mtime":1610107856594},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/cache-loader/dist/cjs.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/babel-loader/lib/index.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/cache-loader/dist/cjs.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js","mtime":1608128773020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgc2VydmljZURldGFpbCwKICBzZXJ2aWNlQWRkVGNwLAogIHNlcnZpY2VVcGRhdGVUY3AKfSBmcm9tICdAL2FwaS9zZXJ2aWNlJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpc19lZGl0OiBmYWxzZSwKICAgICAgZGlzYWJsZUJ1dHRvbjogZmFsc2UsCiAgICAgIGZvcm06IHsKICAgICAgICBpZDogJycsCiAgICAgICAgc2VydmljZV9uYW1lOiAnJywKICAgICAgICBzZXJ2aWNlX2Rlc2M6ICcnLAogICAgICAgIHBvcnQ6ICcnLAogICAgICAgIHJ1bGVfdHlwZTogJzAnLAogICAgICAgIHJ1bGU6ICcnLAogICAgICAgIG5lZWRfaHR0cHM6ICcwJywKICAgICAgICBuZWVkX3N0cmlwX3VyaTogJzEnLAogICAgICAgIG5lZWRfd2Vic29ja2V0OiAnMScsCiAgICAgICAgdXJsX3Jld3JpdGU6ICcnLAogICAgICAgIGhlYWRlcl90cmFuc2ZvcjogJycsCiAgICAgICAgb3Blbl9hdXRoOiAnMCcsCiAgICAgICAgYmxhY2tfbGlzdDogJycsCiAgICAgICAgd2hpdGVfbGlzdDogJycsCiAgICAgICAgd2hpdGVfaG9zdF9uYW1lOiAnJywKICAgICAgICBjbGllbnRpcF9mbG93X2xpbWl0OiAnJywKICAgICAgICBzZXJ2aWNlX2Zsb3dfbGltaXQ6ICcnLAogICAgICAgIHJvdW5kX3R5cGU6ICcyJywKICAgICAgICBpcF9saXN0OiAnJywKICAgICAgICB3ZWlnaHRfbGlzdDogJycsCiAgICAgICAgZm9yYmlkX2xpc3Q6ICcnLAogICAgICAgIHVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dDogJycsCiAgICAgICAgdXBzdHJlYW1faGVhZGVyX3RpbWVvdXQ6ICcnLAogICAgICAgIHVwc3RyZWFtX2lkbGVfdGltZW91dDogJycsCiAgICAgICAgdXBzdHJlYW1fbWF4X2lkbGU6ICcnCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcyAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgIGlmIChpZCA+IDApIHsKICAgICAgdGhpcy5pc19lZGl0ID0gdHJ1ZQogICAgICB0aGlzLmZldGNoRGF0YShpZCkKICAgIH0KICAgIHRoaXMudGVtcFJvdXRlID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy4kcm91dGUpCiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaERhdGEoaWQpIHsKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWUKICAgICAgY29uc3QgcXVlcnkgPSB7CiAgICAgICAgaWQ6IGlkCiAgICAgIH0KICAgICAgc2VydmljZURldGFpbChxdWVyeSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgY29uc3QgZm9ybURhdGEgPSByZXNwb25zZS5kYXRhCiAgICAgICAgY29uc29sZS5sb2coZm9ybURhdGEpCgogICAgICAgIHRoaXMuZm9ybS5pZCA9IGZvcm1EYXRhLmluZm8uaWQKICAgICAgICB0aGlzLmZvcm0uc2VydmljZV9uYW1lID0gZm9ybURhdGEuaW5mby5zZXJ2aWNlX25hbWUKICAgICAgICB0aGlzLmZvcm0uc2VydmljZV9kZXNjID0gZm9ybURhdGEuaW5mby5zZXJ2aWNlX2Rlc2MKCiAgICAgICAgdGhpcy5mb3JtLnBvcnQgPSBmb3JtRGF0YS50Y3AucG9ydC50b1N0cmluZygpCgogICAgICAgIHRoaXMuZm9ybS5ydWxlX3R5cGUgPSBmb3JtRGF0YS5odHRwLnJ1bGVfdHlwZS50b1N0cmluZygpCiAgICAgICAgdGhpcy5mb3JtLnJ1bGUgPSBmb3JtRGF0YS5odHRwLnJ1bGUKICAgICAgICB0aGlzLmZvcm0ubmVlZF9odHRwcyA9IGZvcm1EYXRhLmh0dHAubmVlZF9odHRwcy50b1N0cmluZygpCiAgICAgICAgdGhpcy5mb3JtLm5lZWRfc3RyaXBfdXJpID0gZm9ybURhdGEuaHR0cC5uZWVkX3N0cmlwX3VyaS50b1N0cmluZygpCiAgICAgICAgdGhpcy5mb3JtLm5lZWRfd2Vic29ja2V0ID0gZm9ybURhdGEuaHR0cC5uZWVkX3dlYnNvY2tldC50b1N0cmluZygpCiAgICAgICAgLy8gdGhpcy5mb3JtLnVybF9yZXdyaXRlID0gZm9ybURhdGEuaHR0cC51cmxfcmV3cml0ZS5yZXBsYWNlKC8sL2csICdcbicpCiAgICAgICAgLy8gdGhpcy5mb3JtLmhlYWRlcl90cmFuc2ZvciA9IGZvcm1EYXRhLmh0dHAuaGVhZGVyX3RyYW5zZm9yLnJlcGxhY2UoLywvZywgJ1xuJykKCiAgICAgICAgdGhpcy5mb3JtLm9wZW5fYXV0aCA9IGZvcm1EYXRhLmFjY2Vzc19jb250cm9sLm9wZW5fYXV0aC50b1N0cmluZygpCiAgICAgICAgdGhpcy5mb3JtLmJsYWNrX2xpc3QgPSBmb3JtRGF0YS5hY2Nlc3NfY29udHJvbC5ibGFja19saXN0LnJlcGxhY2UoLywvZywgJ1xuJykKICAgICAgICB0aGlzLmZvcm0ud2hpdGVfbGlzdCA9IGZvcm1EYXRhLmFjY2Vzc19jb250cm9sLndoaXRlX2xpc3QucmVwbGFjZSgvLC9nLCAnXG4nKQogICAgICAgIHRoaXMuZm9ybS53aGl0ZV9ob3N0X25hbWUgPSBmb3JtRGF0YS5hY2Nlc3NfY29udHJvbC53aGl0ZV9ob3N0X25hbWUucmVwbGFjZSgvLC9nLCAnXG4nKQogICAgICAgIHRoaXMuZm9ybS5jbGllbnRpcF9mbG93X2xpbWl0ID0gZm9ybURhdGEuYWNjZXNzX2NvbnRyb2wuY2xpZW50aXBfZmxvd19saW1pdAogICAgICAgIHRoaXMuZm9ybS5zZXJ2aWNlX2Zsb3dfbGltaXQgPSBmb3JtRGF0YS5hY2Nlc3NfY29udHJvbC5zZXJ2aWNlX2Zsb3dfbGltaXQKCiAgICAgICAgdGhpcy5mb3JtLnJvdW5kX3R5cGUgPSBmb3JtRGF0YS5sb2FkX2JhbGFuY2Uucm91bmRfdHlwZS50b1N0cmluZygpCiAgICAgICAgdGhpcy5mb3JtLmlwX2xpc3QgPSBmb3JtRGF0YS5sb2FkX2JhbGFuY2UuaXBfbGlzdC5yZXBsYWNlKC8sL2csICdcbicpCiAgICAgICAgdGhpcy5mb3JtLndlaWdodF9saXN0ID0gZm9ybURhdGEubG9hZF9iYWxhbmNlLndlaWdodF9saXN0LnJlcGxhY2UoLywvZywgJ1xuJykKICAgICAgICB0aGlzLmZvcm0uZm9yYmlkX2xpc3QgPSBmb3JtRGF0YS5sb2FkX2JhbGFuY2UuZm9yYmlkX2xpc3QucmVwbGFjZSgvLC9nLCAnXG4nKQoKICAgICAgICB0aGlzLmZvcm0udXBzdHJlYW1fY29ubmVjdF90aW1lb3V0ID0gZm9ybURhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dAogICAgICAgIHRoaXMuZm9ybS51cHN0cmVhbV9oZWFkZXJfdGltZW91dCA9IGZvcm1EYXRhLmxvYWRfYmFsYW5jZS51cHN0cmVhbV9oZWFkZXJfdGltZW91dAogICAgICAgIHRoaXMuZm9ybS51cHN0cmVhbV9pZGxlX3RpbWVvdXQgPSBmb3JtRGF0YS5sb2FkX2JhbGFuY2UudXBzdHJlYW1faWRsZV90aW1lb3V0CiAgICAgICAgdGhpcy5mb3JtLnVwc3RyZWFtX21heF9pZGxlID0gZm9ybURhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX21heF9pZGxlCgogICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfSwKICAgIG9uU3VibWl0KCkgewogICAgICB0aGlzLmRpc2FibGVCdXR0b24gPSB0cnVlCiAgICAgIGNvbnN0IGZvcm1EYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5mb3JtKQogICAgICBmb3JtRGF0YS5wb3J0ID0gTnVtYmVyKGZvcm1EYXRhLnBvcnQpCiAgICAgIGZvcm1EYXRhLnJ1bGVfdHlwZSA9IE51bWJlcihmb3JtRGF0YS5ydWxlX3R5cGUpCiAgICAgIGZvcm1EYXRhLm5lZWRfaHR0cHMgPSBOdW1iZXIoZm9ybURhdGEubmVlZF9odHRwcykKICAgICAgZm9ybURhdGEubmVlZF9zdHJpcF91cmkgPSBOdW1iZXIoZm9ybURhdGEubmVlZF9zdHJpcF91cmkpCiAgICAgIGZvcm1EYXRhLm5lZWRfd2Vic29ja2V0ID0gTnVtYmVyKGZvcm1EYXRhLm5lZWRfd2Vic29ja2V0KQogICAgICBmb3JtRGF0YS5vcGVuX2F1dGggPSBOdW1iZXIoZm9ybURhdGEub3Blbl9hdXRoKQogICAgICBmb3JtRGF0YS5yb3VuZF90eXBlID0gTnVtYmVyKGZvcm1EYXRhLnJvdW5kX3R5cGUpCiAgICAgIGZvcm1EYXRhLmNsaWVudGlwX2Zsb3dfbGltaXQgPSBOdW1iZXIoZm9ybURhdGEuY2xpZW50aXBfZmxvd19saW1pdCkKICAgICAgZm9ybURhdGEuc2VydmljZV9mbG93X2xpbWl0ID0gTnVtYmVyKGZvcm1EYXRhLnNlcnZpY2VfZmxvd19saW1pdCkKICAgICAgZm9ybURhdGEudXBzdHJlYW1fY29ubmVjdF90aW1lb3V0ID0gTnVtYmVyKGZvcm1EYXRhLnVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dCkKICAgICAgZm9ybURhdGEudXBzdHJlYW1faGVhZGVyX3RpbWVvdXQgPSBOdW1iZXIoZm9ybURhdGEudXBzdHJlYW1faGVhZGVyX3RpbWVvdXQpCiAgICAgIGZvcm1EYXRhLnVwc3RyZWFtX2lkbGVfdGltZW91dCA9IE51bWJlcihmb3JtRGF0YS51cHN0cmVhbV9pZGxlX3RpbWVvdXQpCiAgICAgIGZvcm1EYXRhLnVwc3RyZWFtX21heF9pZGxlID0gTnVtYmVyKGZvcm1EYXRhLnVwc3RyZWFtX21heF9pZGxlKQoKICAgICAgZm9ybURhdGEuaXBfbGlzdCA9IGZvcm1EYXRhLmlwX2xpc3QucmVwbGFjZSgvXG4vZywgJywnKQogICAgICBmb3JtRGF0YS53ZWlnaHRfbGlzdCA9IGZvcm1EYXRhLndlaWdodF9saXN0LnJlcGxhY2UoL1xuL2csICcsJykKICAgICAgZm9ybURhdGEuZm9yYmlkX2xpc3QgPSBmb3JtRGF0YS5mb3JiaWRfbGlzdC5yZXBsYWNlKC9cbi9nLCAnLCcpCiAgICAgIGZvcm1EYXRhLndoaXRlX2hvc3RfbmFtZSA9IGZvcm1EYXRhLndoaXRlX2hvc3RfbmFtZS5yZXBsYWNlKC9cbi9nLCAnLCcpCiAgICAgIGZvcm1EYXRhLndoaXRlX2xpc3QgPSBmb3JtRGF0YS53aGl0ZV9saXN0LnJlcGxhY2UoL1xuL2csICcsJykKICAgICAgZm9ybURhdGEuYmxhY2tfbGlzdCA9IGZvcm1EYXRhLmJsYWNrX2xpc3QucmVwbGFjZSgvXG4vZywgJywnKQogICAgICBmb3JtRGF0YS5oZWFkZXJfdHJhbnNmb3IgPSBmb3JtRGF0YS5oZWFkZXJfdHJhbnNmb3IucmVwbGFjZSgvXG4vZywgJywnKQogICAgICBmb3JtRGF0YS51cmxfcmV3cml0ZSA9IGZvcm1EYXRhLnVybF9yZXdyaXRlLnJlcGxhY2UoL1xuL2csICcsJykKCiAgICAgIGlmICh0aGlzLmlzX2VkaXQpIHsKICAgICAgICBzZXJ2aWNlVXBkYXRlVGNwKGZvcm1EYXRhKS50aGVuKCgpID0+IHsKICAgICAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbiA9IGZhbHNlCiAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgICAgICBtZXNzYWdlOiAnU3VibWl0IFN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgZHVyYXRpb246IDUwMAogICAgICAgICAgfSkKICAgICAgICB9LCAoKSA9PiB7CiAgICAgICAgICB0aGlzLmRpc2FibGVCdXR0b24gPSBmYWxzZQogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2VydmljZUFkZFRjcChmb3JtRGF0YSkudGhlbigoKSA9PiB7CiAgICAgICAgICB0aGlzLmRpc2FibGVCdXR0b24gPSBmYWxzZQogICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgbWVzc2FnZTogJ1N1Ym1pdCBTdWNjZXNzZnVsbHknLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIGR1cmF0aW9uOiA1MDAKICAgICAgICAgIH0pCiAgICAgICAgfSwgKCkgPT4gewogICAgICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uID0gZmFsc2UKICAgICAgICB9KQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["tcp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"tcp.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-form ref=\"form\" :model=\"form\" label-width=\"130px\">\n        <el-card class=\"box-card\" style=\"margin-bottom:20px;\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span v-if=\"is_edit === false\">创建TCP服务</span>\n            <span v-if=\"is_edit === true\">修改TCP服务</span>\n          </div>\n          <div>\n            <el-form-item label=\"服务名称\" class=\"is-required\">\n              <el-input v-model=\"form.service_name\" :disabled=\"is_edit===true\" placeholder=\"6-128位字母数字下划线\" />\n            </el-form-item>\n            <el-form-item label=\"服务描述\" class=\"is-required\">\n              <el-input v-model=\"form.service_desc\" placeholder=\"最多255字符，必填\" />\n            </el-form-item>\n            <el-form-item label=\"端口\" class=\"is-required\">\n              <el-input v-model=\"form.port\" :disabled=\"is_edit===true\" placeholder=\"需要设置8001-8999范围内数字，必填\" />\n            </el-form-item>\n            <el-form-item label=\"开启验证\">\n              <el-switch\n                v-model=\"form.open_auth\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"IP白名单\">\n              <el-input v-model=\"form.white_list\" placeholder=\"格式: 127.0.0.1 多条换行，白名单优先级高于黑名单\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"IP黑名单\">\n              <el-input v-model=\"form.black_list\" placeholder=\"格式: 127.0.0.1 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"客户端限流\">\n              <el-input v-model=\"form.clientip_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"服务端限流\">\n              <el-input v-model=\"form.service_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"轮询方式\">\n              <el-radio v-model=\"form.round_type\" label=\"0\">random</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"1\">round-robin</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"2\">weight_round-robin</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"3\">ip_hash</el-radio>\n            </el-form-item>\n\n            <el-form-item label=\"IP列表\" class=\"is-required\">\n              <el-input v-model=\"form.ip_list\" placeholder=\"格式: 127.0.0.1:80 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"权重列表\" class=\"is-required\">\n              <el-input v-model=\"form.weight_list\" placeholder=\"格式: 50 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" :loading=\"disableButton\" @click=\"onSubmit\">立即提交</el-button>\n            </el-form-item>\n          </div>\n        </el-card>\n      </el-form>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {\n  serviceDetail,\n  serviceAddTcp,\n  serviceUpdateTcp\n} from '@/api/service'\nexport default {\n  components: { },\n  data() {\n    return {\n      is_edit: false,\n      disableButton: false,\n      form: {\n        id: '',\n        service_name: '',\n        service_desc: '',\n        port: '',\n        rule_type: '0',\n        rule: '',\n        need_https: '0',\n        need_strip_uri: '1',\n        need_websocket: '1',\n        url_rewrite: '',\n        header_transfor: '',\n        open_auth: '0',\n        black_list: '',\n        white_list: '',\n        white_host_name: '',\n        clientip_flow_limit: '',\n        service_flow_limit: '',\n        round_type: '2',\n        ip_list: '',\n        weight_list: '',\n        forbid_list: '',\n        upstream_connect_timeout: '',\n        upstream_header_timeout: '',\n        upstream_idle_timeout: '',\n        upstream_max_idle: ''\n      }\n    }\n  },\n  created() {\n    const id = this.$route.params && this.$route.params.id\n    if (id > 0) {\n      this.is_edit = true\n      this.fetchData(id)\n    }\n    this.tempRoute = Object.assign({}, this.$route)\n  },\n  methods: {\n    fetchData(id) {\n      this.listLoading = true\n      const query = {\n        id: id\n      }\n      serviceDetail(query).then(response => {\n        const formData = response.data\n        console.log(formData)\n\n        this.form.id = formData.info.id\n        this.form.service_name = formData.info.service_name\n        this.form.service_desc = formData.info.service_desc\n\n        this.form.port = formData.tcp.port.toString()\n\n        this.form.rule_type = formData.http.rule_type.toString()\n        this.form.rule = formData.http.rule\n        this.form.need_https = formData.http.need_https.toString()\n        this.form.need_strip_uri = formData.http.need_strip_uri.toString()\n        this.form.need_websocket = formData.http.need_websocket.toString()\n        // this.form.url_rewrite = formData.http.url_rewrite.replace(/,/g, '\\n')\n        // this.form.header_transfor = formData.http.header_transfor.replace(/,/g, '\\n')\n\n        this.form.open_auth = formData.access_control.open_auth.toString()\n        this.form.black_list = formData.access_control.black_list.replace(/,/g, '\\n')\n        this.form.white_list = formData.access_control.white_list.replace(/,/g, '\\n')\n        this.form.white_host_name = formData.access_control.white_host_name.replace(/,/g, '\\n')\n        this.form.clientip_flow_limit = formData.access_control.clientip_flow_limit\n        this.form.service_flow_limit = formData.access_control.service_flow_limit\n\n        this.form.round_type = formData.load_balance.round_type.toString()\n        this.form.ip_list = formData.load_balance.ip_list.replace(/,/g, '\\n')\n        this.form.weight_list = formData.load_balance.weight_list.replace(/,/g, '\\n')\n        this.form.forbid_list = formData.load_balance.forbid_list.replace(/,/g, '\\n')\n\n        this.form.upstream_connect_timeout = formData.load_balance.upstream_connect_timeout\n        this.form.upstream_header_timeout = formData.load_balance.upstream_header_timeout\n        this.form.upstream_idle_timeout = formData.load_balance.upstream_idle_timeout\n        this.form.upstream_max_idle = formData.load_balance.upstream_max_idle\n\n        this.listLoading = false\n      })\n    },\n    onSubmit() {\n      this.disableButton = true\n      const formData = Object.assign({}, this.form)\n      formData.port = Number(formData.port)\n      formData.rule_type = Number(formData.rule_type)\n      formData.need_https = Number(formData.need_https)\n      formData.need_strip_uri = Number(formData.need_strip_uri)\n      formData.need_websocket = Number(formData.need_websocket)\n      formData.open_auth = Number(formData.open_auth)\n      formData.round_type = Number(formData.round_type)\n      formData.clientip_flow_limit = Number(formData.clientip_flow_limit)\n      formData.service_flow_limit = Number(formData.service_flow_limit)\n      formData.upstream_connect_timeout = Number(formData.upstream_connect_timeout)\n      formData.upstream_header_timeout = Number(formData.upstream_header_timeout)\n      formData.upstream_idle_timeout = Number(formData.upstream_idle_timeout)\n      formData.upstream_max_idle = Number(formData.upstream_max_idle)\n\n      formData.ip_list = formData.ip_list.replace(/\\n/g, ',')\n      formData.weight_list = formData.weight_list.replace(/\\n/g, ',')\n      formData.forbid_list = formData.forbid_list.replace(/\\n/g, ',')\n      formData.white_host_name = formData.white_host_name.replace(/\\n/g, ',')\n      formData.white_list = formData.white_list.replace(/\\n/g, ',')\n      formData.black_list = formData.black_list.replace(/\\n/g, ',')\n      formData.header_transfor = formData.header_transfor.replace(/\\n/g, ',')\n      formData.url_rewrite = formData.url_rewrite.replace(/\\n/g, ',')\n\n      if (this.is_edit) {\n        serviceUpdateTcp(formData).then(() => {\n          this.disableButton = false\n          this.$notify({\n            title: 'Success',\n            message: 'Submit Successfully',\n            type: 'success',\n            duration: 500\n          })\n        }, () => {\n          this.disableButton = false\n        })\n      } else {\n        serviceAddTcp(formData).then(() => {\n          this.disableButton = false\n          this.$notify({\n            title: 'Success',\n            message: 'Submit Successfully',\n            type: 'success',\n            duration: 500\n          })\n        }, () => {\n          this.disableButton = false\n        })\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.component-item{\n  min-height: 100px;\n}\n.el-select .el-input {\n    width: 130px;\n  }\n  .input-with-select .el-input-group__prepend {\n    background-color: #fff;\n  }\n</style>\n\n"]}]}