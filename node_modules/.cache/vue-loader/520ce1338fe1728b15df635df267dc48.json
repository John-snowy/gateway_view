{"remainingRequest":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/GoProjects/go_gateway_view/src/views/service/http.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/john/GoProjects/go_gateway_view/src/views/service/http.vue","mtime":1609999892179},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/cache-loader/dist/cjs.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/babel-loader/lib/index.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/cache-loader/dist/cjs.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js","mtime":1608128773020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgeyBzZXJ2aWNlQWRkSHR0cCwgc2VydmljZURldGFpbCwgc2VydmljZVVwZGF0ZUh0dHAgfSBmcm9tICdAL2FwaS9zZXJ2aWNlJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZXJ2aWNlQWRkSFRUUCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRWRpdDogZmFsc2UsCiAgICAgIHN1Ym1pdEJ1dERpc2FibGU6IGZhbHNlLAogICAgICBmb3JtOiB7CiAgICAgICAgc2VydmljZV9uYW1lOiAnJywKICAgICAgICBzZXJ2aWNlX2Rlc2M6ICcnLAogICAgICAgIHJ1bGVfdHlwZTogMCwKICAgICAgICBydWxlOiAnJywKICAgICAgICBuZWVkX2h0dHBzOiAwLAogICAgICAgIG5lZWRfd2Vic29ja2V0OiAwLAogICAgICAgIG5lZWRfc3RyaXBfdXJpOiAxLAogICAgICAgIHVybF9yZXdyaXRlOiAnJywKICAgICAgICBoZWFkZXJfdHJhbnNmZXI6ICcnLAogICAgICAgIHJvdW5kX3R5cGU6IDIsCiAgICAgICAgaXBfbGlzdDogJycsCiAgICAgICAgd2VpZ2h0X2xpc3Q6ICcnLAogICAgICAgIHVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dDogJycsCiAgICAgICAgdXBzdHJlYW1faGVhZGVyX3RpbWVvdXQ6ICcnLAogICAgICAgIHVwc3RyZWFtX2lkbGVfdGltZW91dDogJycsCiAgICAgICAgdXBzdHJlYW1fbWF4X2lkbGU6ICcnLAogICAgICAgIG9wZW5fYXV0aDogMCwKICAgICAgICBibGFja19saXN0OiAnJywKICAgICAgICB3aGl0ZV9saXN0OiAnJywKICAgICAgICBjbGllbnRpcF9mbG93X2xpbWl0OiAnJywKICAgICAgICBzZXJ2aWNlX2Zsb3dfbGltaXQ6ICcnCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcyAmJiB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgIGlmIChpZCA+IDApIHsKICAgICAgdGhpcy5pc0VkaXQgPSB0cnVlCiAgICAgIHRoaXMuZmV0Y2hEYXRhKGlkKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhKGlkKSB7CiAgICAgIGNvbnN0IHF1ZXJ5ID0geyAnaWQnOiBpZCB9CiAgICAgIHNlcnZpY2VEZXRhaWwocXVlcnkpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMuZm9ybS5pZCA9IHJlc3BvbnNlLmRhdGEuaW5mby5pZAogICAgICAgIHRoaXMuZm9ybS5zZXJ2aWNlX25hbWUgPSByZXNwb25zZS5kYXRhLmluZm8uc2VydmljZV9uYW1lCiAgICAgICAgdGhpcy5mb3JtLnNlcnZpY2VfZGVzYyA9IHJlc3BvbnNlLmRhdGEuaW5mby5zZXJ2aWNlX2Rlc2MKICAgICAgICB0aGlzLmZvcm0ucnVsZV90eXBlID0gcmVzcG9uc2UuZGF0YS5odHRwLnJ1bGVfdHlwZQogICAgICAgIHRoaXMuZm9ybS5ydWxlID0gcmVzcG9uc2UuZGF0YS5odHRwLnJ1bGUKICAgICAgICB0aGlzLmZvcm0ubmVlZF9odHRwcyA9IHJlc3BvbnNlLmRhdGEuaHR0cC5uZWVkX2h0dHBzCiAgICAgICAgdGhpcy5mb3JtLm5lZWRfd2Vic29ja2V0ID0gcmVzcG9uc2UuZGF0YS5odHRwLm5lZWRfd2Vic29ja2V0CiAgICAgICAgdGhpcy5mb3JtLm5lZWRfc3RyaXBfdXJpID0gcmVzcG9uc2UuZGF0YS5odHRwLm5lZWRfc3RyaXBfdXJpCiAgICAgICAgdGhpcy5mb3JtLnVybF9yZXdyaXRlID0gcmVzcG9uc2UuZGF0YS5odHRwLnVybF9yZXdyaXRlLnJlcGxhY2UoLywvZywgJ1xuJykKICAgICAgICB0aGlzLmZvcm0uaGVhZGVyX3RyYW5zZmVyID0gcmVzcG9uc2UuZGF0YS5odHRwLmhlYWRlcl90cmFuc2Zlci5yZXBsYWNlKC8sL2csICdcbicpCiAgICAgICAgdGhpcy5mb3JtLnJvdW5kX3R5cGUgPSByZXNwb25zZS5kYXRhLmxvYWRfYmFsYW5jZS5yb3VuZF90eXBlCiAgICAgICAgdGhpcy5mb3JtLmlwX2xpc3QgPSByZXNwb25zZS5kYXRhLmxvYWRfYmFsYW5jZS5pcF9saXN0LnJlcGxhY2UoLywvZywgJ1xuJykKICAgICAgICB0aGlzLmZvcm0ud2VpZ2h0X2xpc3QgPSByZXNwb25zZS5kYXRhLmxvYWRfYmFsYW5jZS53ZWlnaHRfbGlzdC5yZXBsYWNlKC8sL2csICdcbicpCiAgICAgICAgdGhpcy5mb3JtLnVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dCA9IHJlc3BvbnNlLmRhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dAogICAgICAgIHRoaXMuZm9ybS51cHN0cmVhbV9oZWFkZXJfdGltZW91dCA9IHJlc3BvbnNlLmRhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX2hlYWRlcl90aW1lb3V0CiAgICAgICAgdGhpcy5mb3JtLnVwc3RyZWFtX2lkbGVfdGltZW91dCA9IHJlc3BvbnNlLmRhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX2lkbGVfdGltZW91dAogICAgICAgIHRoaXMuZm9ybS51cHN0cmVhbV9tYXhfaWRsZSA9IHJlc3BvbnNlLmRhdGEubG9hZF9iYWxhbmNlLnVwc3RyZWFtX21heF9pZGxlCiAgICAgICAgdGhpcy5mb3JtLm9wZW5fYXV0aCA9IHJlc3BvbnNlLmRhdGEuYWNjZXNzX2NvbnRyb2wub3Blbl9hdXRoCiAgICAgICAgdGhpcy5mb3JtLmJsYWNrX2xpc3QgPSByZXNwb25zZS5kYXRhLmFjY2Vzc19jb250cm9sLmJsYWNrX2xpc3QucmVwbGFjZSgvLC9nLCAnXG4nKQogICAgICAgIHRoaXMuZm9ybS53aGl0ZV9saXN0ID0gcmVzcG9uc2UuZGF0YS5hY2Nlc3NfY29udHJvbC53aGl0ZV9saXN0LnJlcGxhY2UoLywvZywgJ1xuJykKICAgICAgICB0aGlzLmZvcm0uY2xpZW50aXBfZmxvd19saW1pdCA9IHJlc3BvbnNlLmRhdGEuYWNjZXNzX2NvbnRyb2wuY2xpZW50aXBfZmxvd19saW1pdAogICAgICAgIHRoaXMuZm9ybS5zZXJ2aWNlX2Zsb3dfbGltaXQgPSByZXNwb25zZS5kYXRhLmFjY2Vzc19jb250cm9sLnNlcnZpY2VfZmxvd19saW1pdAogICAgICB9KS5jYXRjaCgoKSA9PiB7CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlU3VibWl0KCkgewogICAgICB0aGlzLnN1Ym1pdEJ1dERpc2FibGUgPSB0cnVlCiAgICAgIGNvbnN0IHF1ZXJ5ID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5mb3JtKQogICAgICBjb25zb2xlLmxvZyhxdWVyeSkKICAgICAgLy8g5o2i6KGM56ym5pu/5o2iCiAgICAgIHF1ZXJ5LnVybF9yZXdyaXRlID0gcXVlcnkudXJsX3Jld3JpdGUucmVwbGFjZSgvXG4vZywgJywnKQogICAgICBxdWVyeS5oZWFkZXJfdHJhbnNmZXIgPSBxdWVyeS5oZWFkZXJfdHJhbnNmZXIucmVwbGFjZSgvXG4vZywgJywnKQogICAgICBxdWVyeS5pcF9saXN0ID0gcXVlcnkuaXBfbGlzdC5yZXBsYWNlKC9cbi9nLCAnLCcpCiAgICAgIHF1ZXJ5LndlaWdodF9saXN0ID0gcXVlcnkud2VpZ2h0X2xpc3QucmVwbGFjZSgvXG4vLCAnLCcpCiAgICAgIHF1ZXJ5LndoaXRlX2xpc3QgPSBxdWVyeS53aGl0ZV9saXN0LnJlcGxhY2UoL1xuL2csICcsJykKICAgICAgcXVlcnkuYmxhY2tfbGlzdCA9IHF1ZXJ5LmJsYWNrX2xpc3QucmVwbGFjZSgvXG4vZywgJywnKQoKICAgICAgLy8g5bCG5a2X56ym5Liy6L2s5o2i5oiQaW5057G75Z6LCiAgICAgIHF1ZXJ5LmNsaWVudGlwX2Zsb3dfbGltaXQgPSBOdW1iZXIocXVlcnkuY2xpZW50aXBfZmxvd19saW1pdCkKICAgICAgcXVlcnkuc2VydmljZV9mbG93X2xpbWl0ID0gTnVtYmVyKHF1ZXJ5LnNlcnZpY2VfZmxvd19saW1pdCkKICAgICAgcXVlcnkudXBzdHJlYW1fY29ubmVjdF90aW1lb3V0ID0gTnVtYmVyKHF1ZXJ5LnVwc3RyZWFtX2Nvbm5lY3RfdGltZW91dCkKICAgICAgcXVlcnkudXBzdHJlYW1faGVhZGVyX3RpbWVvdXQgPSBOdW1iZXIocXVlcnkudXBzdHJlYW1faGVhZGVyX3RpbWVvdXQpCiAgICAgIHF1ZXJ5LnVwc3RyZWFtX2lkbGVfdGltZW91dCA9IE51bWJlcihxdWVyeS51cHN0cmVhbV9pZGxlX3RpbWVvdXQpCiAgICAgIHF1ZXJ5LnVwc3RyZWFtX21heF9pZGxlID0gTnVtYmVyKHF1ZXJ5LnVwc3RyZWFtX21heF9pZGxlKQoKICAgICAgaWYgKHRoaXMuaXNFZGl0KSB7CiAgICAgICAgc2VydmljZVVwZGF0ZUh0dHAocXVlcnkpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgdGhpcy5zdWJtaXRCdXREaXNhYmxlID0gZmFsc2UKICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgIG1lc3NhZ2U6ICfkv67mlLnmiJDlip8nLAogICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICB9KQogICAgICAgIH0pLmNhdGNoKCgpID0+IHsKICAgICAgICAgIHRoaXMuc3VibWl0QnV0RGlzYWJsZSA9IGZhbHNlCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICBzZXJ2aWNlQWRkSHR0cChxdWVyeSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICB0aGlzLnN1Ym1pdEJ1dERpc2FibGUgPSBmYWxzZQogICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgbWVzc2FnZTogJ+a3u+WKoOaIkOWKnycsCiAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgIH0pCiAgICAgICAgfSkuY2F0Y2goKCkgPT4gewogICAgICAgICAgdGhpcy5zdWJtaXRCdXREaXNhYmxlID0gZmFsc2UKICAgICAgICB9KQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["http.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"http.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-card class=\"box-card\">\n        <div slot=\"header\" class=\"clearfix\">\n          <span v-if=\"isEdit===false\">创建HTTP服务</span>\n          <span v-if=\"isEdit===true\">修改HTTP服务</span>\n        </div>\n        <div style=\"margin-bottom:50px;\">\n          <el-form ref=\"form\" :model=\"form\" label-width=\"100px\">\n            <el-form-item label=\"服务名称\" class=\"is-required\">\n              <el-input v-model=\"form.service_name\" placeholder=\"6-128位字母数字下划线\" :disabled=\"isEdit===true\" />\n            </el-form-item>\n            <el-form-item label=\"服务描述\" class=\"is-required\">\n              <el-input v-model=\"form.service_desc\" placeholder=\"最多255字数，必填\" />\n            </el-form-item>\n            <el-form-item label=\"接入类型\" class=\"is-required\">\n              <el-input v-model=\"form.rule\" placeholder=\"路径格式： /user/, 域名格式： www.test.com\" class=\"input-with-select\" :disabled=\"isEdit===true\">\n                <el-select slot=\"prepend\" v-model=\"form.rule_type\" placeholder=\"请选择\" style=\"width: 80px\" :disabled=\"isEdit===true\">\n                  <el-option label=\"路径\" :value=\"0\" />\n                  <el-option label=\"域名\" :value=\"1\" />\n                </el-select>\n              </el-input>\n            </el-form-item>\n\n            <el-form-item label=\"支持https\">\n              <el-switch\n                v-model=\"form.need_https\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n              <span style=\"color:#606266;font-weight:700;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持strip_uri</span>\n              <el-switch\n                v-model=\"form.need_strip_uri\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n              <span style=\"color:#606266;font-weight:700;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;支持websocket</span>\n              <el-switch\n                v-model=\"form.need_websocket\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"URL重写\">\n              <el-input v-model=\"form.url_rewrite\" type=\"textarea\" autosize placeholder=\"格式： ^/gateway/test_service(.*)$1 多条换行\" />\n            </el-form-item>\n            <el-form-item label=\"Header转换\">\n              <el-input v-model=\"form.header_tranfer\" type=\"textarea\" autosize placeholder=\"header转换支持 add(增加)/del(删除)/edit(修改) 格式： add headerName\" />\n            </el-form-item>\n\n            <el-form-item label=\"开启验证\">\n              <el-switch\n                v-model=\"form.open_auth\"\n                :active-value=\"1\"\n                :inactive-value=\"0\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"IP白名单\">\n              <el-input v-model=\"form.white_list\" type=\"textarea\" autosize placeholder=\"格式： 127.0.0.1 多条换行，白名单优先于黑名单\" />\n            </el-form-item>\n            <el-form-item label=\"IP黑名单\">\n              <el-input v-model=\"form.black_list\" type=\"textarea\" autosize placeholder=\"格式： 127.0.0.1 多条换行\" />\n            </el-form-item>\n\n            <el-form-item label=\"客户端限流\">\n              <el-input v-model=\"form.clientip_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n            <el-form-item label=\"服务端限流\">\n              <el-input v-model=\"form.service_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"轮询方式\">\n              <el-radio-group v-model=\"form.round_type\">\n                <el-radio :label=\"0\">random</el-radio>\n                <el-radio :label=\"1\">round-robin</el-radio>\n                <el-radio :label=\"2\">weight_round-robin</el-radio>\n                <el-radio :label=\"3\">ip_hash</el-radio>\n              </el-radio-group>\n            </el-form-item>\n\n            <el-form-item label=\"IP列表\" class=\"is-required\">\n              <el-input v-model=\"form.ip_list\" type=\"textarea\" autosize placeholder=\"格式： 127.0.0.1 多条换行\" />\n            </el-form-item>\n            <el-form-item label=\"权重列表\" class=\"is-required\">\n              <el-input v-model=\"form.weight_list\" type=\"textarea\" autosize placeholder=\"格式： 50 多条换行\" />\n            </el-form-item>\n\n            <el-form-item label=\"建立连接超时\">\n              <el-input v-model=\"form.upstream_connect_timeout\" placeholder=\"单位s,0表示无限制\" />\n            </el-form-item>\n            <el-form-item label=\"获取header超时\">\n              <el-input v-model=\"form.upstream_header_timeout\" placeholder=\"单位s,0表示无限制\" />\n            </el-form-item>\n            <el-form-item label=\"链接最大空闲时间\">\n              <el-input v-model=\"form.upstream_idle_timeout\" placeholder=\"单位s,0表示无限制\" />\n            </el-form-item>\n            <el-form-item label=\"最大空闲连接数\">\n              <el-input v-model=\"form.upstream_max_idle\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" :disabled=\"submitButDisable\" @click=\"handleSubmit\">立即提交</el-button>\n            </el-form-item>\n          </el-form>\n        </div>\n      </el-card>\n    </el-row>\n  </div>\n</template>\n\n<script>\n\nimport { serviceAddHttp, serviceDetail, serviceUpdateHttp } from '@/api/service'\n\nexport default {\n  name: 'ServiceAddHTTP',\n  data() {\n    return {\n      isEdit: false,\n      submitButDisable: false,\n      form: {\n        service_name: '',\n        service_desc: '',\n        rule_type: 0,\n        rule: '',\n        need_https: 0,\n        need_websocket: 0,\n        need_strip_uri: 1,\n        url_rewrite: '',\n        header_transfer: '',\n        round_type: 2,\n        ip_list: '',\n        weight_list: '',\n        upstream_connect_timeout: '',\n        upstream_header_timeout: '',\n        upstream_idle_timeout: '',\n        upstream_max_idle: '',\n        open_auth: 0,\n        black_list: '',\n        white_list: '',\n        clientip_flow_limit: '',\n        service_flow_limit: ''\n      }\n    }\n  },\n  created() {\n    const id = this.$route.params && this.$route.params.id\n    if (id > 0) {\n      this.isEdit = true\n      this.fetchData(id)\n    }\n  },\n  methods: {\n    fetchData(id) {\n      const query = { 'id': id }\n      serviceDetail(query).then(response => {\n        this.form.id = response.data.info.id\n        this.form.service_name = response.data.info.service_name\n        this.form.service_desc = response.data.info.service_desc\n        this.form.rule_type = response.data.http.rule_type\n        this.form.rule = response.data.http.rule\n        this.form.need_https = response.data.http.need_https\n        this.form.need_websocket = response.data.http.need_websocket\n        this.form.need_strip_uri = response.data.http.need_strip_uri\n        this.form.url_rewrite = response.data.http.url_rewrite.replace(/,/g, '\\n')\n        this.form.header_transfer = response.data.http.header_transfer.replace(/,/g, '\\n')\n        this.form.round_type = response.data.load_balance.round_type\n        this.form.ip_list = response.data.load_balance.ip_list.replace(/,/g, '\\n')\n        this.form.weight_list = response.data.load_balance.weight_list.replace(/,/g, '\\n')\n        this.form.upstream_connect_timeout = response.data.load_balance.upstream_connect_timeout\n        this.form.upstream_header_timeout = response.data.load_balance.upstream_header_timeout\n        this.form.upstream_idle_timeout = response.data.load_balance.upstream_idle_timeout\n        this.form.upstream_max_idle = response.data.load_balance.upstream_max_idle\n        this.form.open_auth = response.data.access_control.open_auth\n        this.form.black_list = response.data.access_control.black_list.replace(/,/g, '\\n')\n        this.form.white_list = response.data.access_control.white_list.replace(/,/g, '\\n')\n        this.form.clientip_flow_limit = response.data.access_control.clientip_flow_limit\n        this.form.service_flow_limit = response.data.access_control.service_flow_limit\n      }).catch(() => {\n      })\n    },\n    handleSubmit() {\n      this.submitButDisable = true\n      const query = Object.assign({}, this.form)\n      console.log(query)\n      // 换行符替换\n      query.url_rewrite = query.url_rewrite.replace(/\\n/g, ',')\n      query.header_transfer = query.header_transfer.replace(/\\n/g, ',')\n      query.ip_list = query.ip_list.replace(/\\n/g, ',')\n      query.weight_list = query.weight_list.replace(/\\n/, ',')\n      query.white_list = query.white_list.replace(/\\n/g, ',')\n      query.black_list = query.black_list.replace(/\\n/g, ',')\n\n      // 将字符串转换成int类型\n      query.clientip_flow_limit = Number(query.clientip_flow_limit)\n      query.service_flow_limit = Number(query.service_flow_limit)\n      query.upstream_connect_timeout = Number(query.upstream_connect_timeout)\n      query.upstream_header_timeout = Number(query.upstream_header_timeout)\n      query.upstream_idle_timeout = Number(query.upstream_idle_timeout)\n      query.upstream_max_idle = Number(query.upstream_max_idle)\n\n      if (this.isEdit) {\n        serviceUpdateHttp(query).then(response => {\n          this.submitButDisable = false\n          this.$notify({\n            title: 'Success',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          })\n        }).catch(() => {\n          this.submitButDisable = false\n        })\n      } else {\n        serviceAddHttp(query).then(response => {\n          this.submitButDisable = false\n          this.$notify({\n            title: 'Success',\n            message: '添加成功',\n            type: 'success',\n            duration: 2000\n          })\n        }).catch(() => {\n          this.submitButDisable = false\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.component-item{\n  min-height: 100px;\n}\n</style>\n"]}]}