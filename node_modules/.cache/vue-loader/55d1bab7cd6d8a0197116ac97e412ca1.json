{"remainingRequest":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/GoProjects/go_gateway_view/src/views/service/tcp.vue?vue&type=style&index=0&id=498dc5dd&scoped=true&lang=css&","dependencies":[{"path":"/home/john/GoProjects/go_gateway_view/src/views/service/tcp.vue","mtime":1610107856594},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/css-loader/dist/cjs.js","mtime":1608128773048},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1608128773020},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/postcss-loader/src/index.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/cache-loader/dist/cjs.js","mtime":1608128773084},{"path":"/home/john/GoProjects/go_gateway_view/node_modules/vue-loader/lib/index.js","mtime":1608128773020}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5taXhpbi1jb21wb25lbnRzLWNvbnRhaW5lciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNTsKICBwYWRkaW5nOiAzMHB4OwogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSA4NHB4KTsKfQouY29tcG9uZW50LWl0ZW17CiAgbWluLWhlaWdodDogMTAwcHg7Cn0KLmVsLXNlbGVjdCAuZWwtaW5wdXQgewogICAgd2lkdGg6IDEzMHB4OwogIH0KICAuaW5wdXQtd2l0aC1zZWxlY3QgLmVsLWlucHV0LWdyb3VwX19wcmVwZW5kIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgfQo="},{"version":3,"sources":["tcp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tcp.vue","sourceRoot":"src/views/service","sourcesContent":["<template>\n  <div class=\"mixin-components-container\">\n    <el-row>\n      <el-form ref=\"form\" :model=\"form\" label-width=\"130px\">\n        <el-card class=\"box-card\" style=\"margin-bottom:20px;\">\n          <div slot=\"header\" class=\"clearfix\">\n            <span v-if=\"is_edit === false\">创建TCP服务</span>\n            <span v-if=\"is_edit === true\">修改TCP服务</span>\n          </div>\n          <div>\n            <el-form-item label=\"服务名称\" class=\"is-required\">\n              <el-input v-model=\"form.service_name\" :disabled=\"is_edit===true\" placeholder=\"6-128位字母数字下划线\" />\n            </el-form-item>\n            <el-form-item label=\"服务描述\" class=\"is-required\">\n              <el-input v-model=\"form.service_desc\" placeholder=\"最多255字符，必填\" />\n            </el-form-item>\n            <el-form-item label=\"端口\" class=\"is-required\">\n              <el-input v-model=\"form.port\" :disabled=\"is_edit===true\" placeholder=\"需要设置8001-8999范围内数字，必填\" />\n            </el-form-item>\n            <el-form-item label=\"开启验证\">\n              <el-switch\n                v-model=\"form.open_auth\"\n                active-value=\"1\"\n                inactive-value=\"0\"\n              />\n            </el-form-item>\n\n            <el-form-item label=\"IP白名单\">\n              <el-input v-model=\"form.white_list\" placeholder=\"格式: 127.0.0.1 多条换行，白名单优先级高于黑名单\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"IP黑名单\">\n              <el-input v-model=\"form.black_list\" placeholder=\"格式: 127.0.0.1 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"客户端限流\">\n              <el-input v-model=\"form.clientip_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"服务端限流\">\n              <el-input v-model=\"form.service_flow_limit\" placeholder=\"0表示无限制\" />\n            </el-form-item>\n\n            <el-form-item label=\"轮询方式\">\n              <el-radio v-model=\"form.round_type\" label=\"0\">random</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"1\">round-robin</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"2\">weight_round-robin</el-radio>\n              <el-radio v-model=\"form.round_type\" label=\"3\">ip_hash</el-radio>\n            </el-form-item>\n\n            <el-form-item label=\"IP列表\" class=\"is-required\">\n              <el-input v-model=\"form.ip_list\" placeholder=\"格式: 127.0.0.1:80 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item label=\"权重列表\" class=\"is-required\">\n              <el-input v-model=\"form.weight_list\" placeholder=\"格式: 50 多条换行\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 20}\" />\n            </el-form-item>\n\n            <el-form-item>\n              <el-button type=\"primary\" :loading=\"disableButton\" @click=\"onSubmit\">立即提交</el-button>\n            </el-form-item>\n          </div>\n        </el-card>\n      </el-form>\n    </el-row>\n  </div>\n</template>\n\n<script>\nimport {\n  serviceDetail,\n  serviceAddTcp,\n  serviceUpdateTcp\n} from '@/api/service'\nexport default {\n  components: { },\n  data() {\n    return {\n      is_edit: false,\n      disableButton: false,\n      form: {\n        id: '',\n        service_name: '',\n        service_desc: '',\n        port: '',\n        rule_type: '0',\n        rule: '',\n        need_https: '0',\n        need_strip_uri: '1',\n        need_websocket: '1',\n        url_rewrite: '',\n        header_transfor: '',\n        open_auth: '0',\n        black_list: '',\n        white_list: '',\n        white_host_name: '',\n        clientip_flow_limit: '',\n        service_flow_limit: '',\n        round_type: '2',\n        ip_list: '',\n        weight_list: '',\n        forbid_list: '',\n        upstream_connect_timeout: '',\n        upstream_header_timeout: '',\n        upstream_idle_timeout: '',\n        upstream_max_idle: ''\n      }\n    }\n  },\n  created() {\n    const id = this.$route.params && this.$route.params.id\n    if (id > 0) {\n      this.is_edit = true\n      this.fetchData(id)\n    }\n    this.tempRoute = Object.assign({}, this.$route)\n  },\n  methods: {\n    fetchData(id) {\n      this.listLoading = true\n      const query = {\n        id: id\n      }\n      serviceDetail(query).then(response => {\n        const formData = response.data\n        console.log(formData)\n\n        this.form.id = formData.info.id\n        this.form.service_name = formData.info.service_name\n        this.form.service_desc = formData.info.service_desc\n\n        this.form.port = formData.tcp.port.toString()\n\n        this.form.rule_type = formData.http.rule_type.toString()\n        this.form.rule = formData.http.rule\n        this.form.need_https = formData.http.need_https.toString()\n        this.form.need_strip_uri = formData.http.need_strip_uri.toString()\n        this.form.need_websocket = formData.http.need_websocket.toString()\n        // this.form.url_rewrite = formData.http.url_rewrite.replace(/,/g, '\\n')\n        // this.form.header_transfor = formData.http.header_transfor.replace(/,/g, '\\n')\n\n        this.form.open_auth = formData.access_control.open_auth.toString()\n        this.form.black_list = formData.access_control.black_list.replace(/,/g, '\\n')\n        this.form.white_list = formData.access_control.white_list.replace(/,/g, '\\n')\n        this.form.white_host_name = formData.access_control.white_host_name.replace(/,/g, '\\n')\n        this.form.clientip_flow_limit = formData.access_control.clientip_flow_limit\n        this.form.service_flow_limit = formData.access_control.service_flow_limit\n\n        this.form.round_type = formData.load_balance.round_type.toString()\n        this.form.ip_list = formData.load_balance.ip_list.replace(/,/g, '\\n')\n        this.form.weight_list = formData.load_balance.weight_list.replace(/,/g, '\\n')\n        this.form.forbid_list = formData.load_balance.forbid_list.replace(/,/g, '\\n')\n\n        this.form.upstream_connect_timeout = formData.load_balance.upstream_connect_timeout\n        this.form.upstream_header_timeout = formData.load_balance.upstream_header_timeout\n        this.form.upstream_idle_timeout = formData.load_balance.upstream_idle_timeout\n        this.form.upstream_max_idle = formData.load_balance.upstream_max_idle\n\n        this.listLoading = false\n      })\n    },\n    onSubmit() {\n      this.disableButton = true\n      const formData = Object.assign({}, this.form)\n      formData.port = Number(formData.port)\n      formData.rule_type = Number(formData.rule_type)\n      formData.need_https = Number(formData.need_https)\n      formData.need_strip_uri = Number(formData.need_strip_uri)\n      formData.need_websocket = Number(formData.need_websocket)\n      formData.open_auth = Number(formData.open_auth)\n      formData.round_type = Number(formData.round_type)\n      formData.clientip_flow_limit = Number(formData.clientip_flow_limit)\n      formData.service_flow_limit = Number(formData.service_flow_limit)\n      formData.upstream_connect_timeout = Number(formData.upstream_connect_timeout)\n      formData.upstream_header_timeout = Number(formData.upstream_header_timeout)\n      formData.upstream_idle_timeout = Number(formData.upstream_idle_timeout)\n      formData.upstream_max_idle = Number(formData.upstream_max_idle)\n\n      formData.ip_list = formData.ip_list.replace(/\\n/g, ',')\n      formData.weight_list = formData.weight_list.replace(/\\n/g, ',')\n      formData.forbid_list = formData.forbid_list.replace(/\\n/g, ',')\n      formData.white_host_name = formData.white_host_name.replace(/\\n/g, ',')\n      formData.white_list = formData.white_list.replace(/\\n/g, ',')\n      formData.black_list = formData.black_list.replace(/\\n/g, ',')\n      formData.header_transfor = formData.header_transfor.replace(/\\n/g, ',')\n      formData.url_rewrite = formData.url_rewrite.replace(/\\n/g, ',')\n\n      if (this.is_edit) {\n        serviceUpdateTcp(formData).then(() => {\n          this.disableButton = false\n          this.$notify({\n            title: 'Success',\n            message: 'Submit Successfully',\n            type: 'success',\n            duration: 500\n          })\n        }, () => {\n          this.disableButton = false\n        })\n      } else {\n        serviceAddTcp(formData).then(() => {\n          this.disableButton = false\n          this.$notify({\n            title: 'Success',\n            message: 'Submit Successfully',\n            type: 'success',\n            duration: 500\n          })\n        }, () => {\n          this.disableButton = false\n        })\n      }\n    }\n  }\n}\n</script>\n<style scoped>\n.mixin-components-container {\n  background-color: #f0f2f5;\n  padding: 30px;\n  min-height: calc(100vh - 84px);\n}\n.component-item{\n  min-height: 100px;\n}\n.el-select .el-input {\n    width: 130px;\n  }\n  .input-with-select .el-input-group__prepend {\n    background-color: #fff;\n  }\n</style>\n\n"]}]}